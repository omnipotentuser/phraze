name: Phraze Github Actions Test
on:
  push:
    branches:
      - github_actions
      - main
jobs:
  Phraze-GitHub-Actions-Test:
    runs-on: ubuntu-latest
    name: Phraze OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: [24.1.7]
        elixir: [1.13.1]
    container:
      image: hexpm/elixir:1.13.1-erlang-24.0.3-debian-bullseye-20210902-slim
    env:
      MIX_ENV: test
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: postgres_db
          # required
          POSTGRES_PASSWORD: postgres_password
          # optional (defaults to `5432`)
          POSTGRES_PORT: 5432
          # optional (defaults to `postgres`)
          POSTGRES_USER: postgres_user
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Install PostgreSQL client
        run: |
          apt-get update
          apt-get install --yes postgresql-client

      # queries database with postgres client
      - name: Query database
        run: psql -h postgres -d postgres_db -U postgres_user -c 'SELECT 1;'
        env:
          # postgress password is required; alternatively, you can run:
          # `PGPASSWORD=postgres_password psql ...`
          PGPASSWORD: postgres_password

      - uses: actions/checkout@v2
      - run: |
          apt-get install -y libssl-dev
          apt-get install -y apt-utils
          apt-get install -y build-essential
          apt-get install -y inotify-tools
      - run: mix local.hex --force
      - run: mix archive.install --force hex phx_new 1.6.5
      - run: mix local.rebar --force
      - run: mix deps.get
      - name: "Run ExCoveralls and generate HTML"
        run: |
          mix coveralls.github
          echo "Checking environment... POSTGRES_DB = ${{ env.DATABASE_NAME }}, POSTGRES_PASSWORD = ${{ env.DATABASE_PASSWORD }}"
        env:
          DATABASE_NAME: postgres_db
          DATABASE_PASSWORD: postgres_password
          POSTGRES_PORT: 5432
          DATABASE_USERNAME: postgres_user
          DATABASE_URL: "ecto://postgre_user:postgres_password@localhost/postgres_db